import '/auth/firebase_auth/auth_util.dart';
import '/backend/backend.dart';
import '/backend/schema/structs/index.dart';
import '/components/background_widget.dart';
import '/components/empty_cart_widget.dart';
import '/flutter_flow/flutter_flow_icon_button.dart';
import '/flutter_flow/flutter_flow_theme.dart';
import '/flutter_flow/flutter_flow_util.dart';
import '/flutter_flow/flutter_flow_widgets.dart';
import 'dart:async';
import '/custom_code/actions/index.dart' as actions;
import '/flutter_flow/custom_functions.dart' as functions;
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:collection/collection.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/material.dart';
import 'package:flutter/scheduler.dart';
import 'package:flutter/services.dart';
import 'package:flutter_spinkit/flutter_spinkit.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:provider/provider.dart';

import 'cart_model.dart';
export 'cart_model.dart';

class CartWidget extends StatefulWidget {
  const CartWidget({Key? key}) : super(key: key);

  @override
  _CartWidgetState createState() => _CartWidgetState();
}

class _CartWidgetState extends State<CartWidget> {
  late CartModel _model;

  final scaffoldKey = GlobalKey<ScaffoldState>();

  @override
  void initState() {
    super.initState();
    _model = createModel(context, () => CartModel());

    logFirebaseEvent('screen_view', parameters: {'screen_name': 'cart'});
    // On page load action.
    SchedulerBinding.instance.addPostFrameCallback((_) async {
      logFirebaseEvent('CART_PAGE_cart_ON_INIT_STATE');
      await actions.newCustomAction(
        FFAppState().breakfastCartList.toList(),
        FFAppState().lunchCartList.toList(),
        FFAppState().dinnerCartList.toList(),
        FFAppState().snackCartList.toList(),
        functions.orderTotal(
            FFAppState()
                .breakfastCartList
                .map((e) => e.itemTotal)
                .toList()
                .toList(),
            FFAppState()
                .dinnerCartList
                .map((e) => e.itemTotal)
                .toList()
                .toList(),
            FFAppState()
                .lunchCartList
                .map((e) => e.itemTotal)
                .toList()
                .toList(),
            FFAppState()
                .snackCartList
                .map((e) => e.itemTotal)
                .toList()
                .toList()),
        valueOrDefault(currentUserDocument?.walletBalance, 0.0),
      );
      _model.checkCurrentProfile = await queryProfilesRecordOnce(
        parent: currentUserReference,
        queryBuilder: (profilesRecord) => profilesRecord.where(
          'pid',
          isEqualTo: FFAppState().selectedProfileID,
        ),
        singleRecord: true,
      ).then((s) => s.firstOrNull);
    });

    WidgetsBinding.instance.addPostFrameCallback((_) => setState(() {}));
  }

  @override
  void dispose() {
    _model.dispose();

    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    if (isiOS) {
      SystemChrome.setSystemUIOverlayStyle(
        SystemUiOverlayStyle(
          statusBarBrightness: Theme.of(context).brightness,
          systemStatusBarContrastEnforced: true,
        ),
      );
    }

    context.watch<FFAppState>();

    return Scaffold(
      key: scaffoldKey,
      backgroundColor: FlutterFlowTheme.of(context).primaryBackground,
      body: NestedScrollView(
        floatHeaderSlivers: true,
        headerSliverBuilder: (context, _) => [
          SliverAppBar(
            pinned: false,
            floating: true,
            snap: true,
            backgroundColor: FlutterFlowTheme.of(context).secondaryBackground,
            automaticallyImplyLeading: false,
            leading: FlutterFlowIconButton(
              borderColor: Colors.transparent,
              borderRadius: 30,
              buttonSize: 46,
              icon: Icon(
                Icons.arrow_back_rounded,
                color: FlutterFlowTheme.of(context).secondaryText,
                size: 24,
              ),
              onPressed: () async {
                logFirebaseEvent('CART_PAGE_arrow_back_rounded_ICN_ON_TAP');
                context.pop();
              },
            ),
            actions: [],
            centerTitle: false,
            elevation: 0,
          )
        ],
        body: Builder(
          builder: (context) {
            return Stack(
              children: [
                wrapWithModel(
                  model: _model.backgroundModel,
                  updateCallback: () => setState(() {}),
                  child: BackgroundWidget(),
                ),
                Align(
                  alignment: AlignmentDirectional(0.00, 0.00),
                  child: SingleChildScrollView(
                    child: Column(
                      mainAxisSize: MainAxisSize.max,
                      children: [
                        Align(
                          alignment: AlignmentDirectional(0.00, 0.00),
                          child: Padding(
                            padding:
                                EdgeInsetsDirectional.fromSTEB(16, 4, 16, 16),
                            child: Container(
                              constraints: BoxConstraints(
                                maxWidth: 770,
                              ),
                              decoration: BoxDecoration(
                                color: FlutterFlowTheme.of(context)
                                    .secondaryBackground,
                                boxShadow: [
                                  BoxShadow(
                                    blurRadius: 4,
                                    color: Color(0x33000000),
                                    offset: Offset(0, 2),
                                  )
                                ],
                                borderRadius: BorderRadius.circular(12),
                              ),
                              child: Padding(
                                padding: EdgeInsetsDirectional.fromSTEB(
                                    16, 16, 16, 16),
                                child: Column(
                                  mainAxisSize: MainAxisSize.max,
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: [
                                    Text(
                                      'Your Cart',
                                      style: FlutterFlowTheme.of(context)
                                          .titleLarge,
                                    ),
                                    Row(
                                      mainAxisSize: MainAxisSize.max,
                                      mainAxisAlignment:
                                          MainAxisAlignment.spaceBetween,
                                      children: [
                                        Padding(
                                          padding:
                                              EdgeInsetsDirectional.fromSTEB(
                                                  0, 4, 0, 12),
                                          child: Text(
                                            'Below is the list of items in your cart.',
                                            style: FlutterFlowTheme.of(context)
                                                .labelMedium,
                                          ),
                                        ),
                                        FFButtonWidget(
                                          onPressed: () async {
                                            logFirebaseEvent(
                                                'CART_PAGE_CLEAR_CART_BTN_ON_TAP');
                                            setState(() {
                                              FFAppState()
                                                  .deleteBreakfastCartList();
                                              FFAppState().breakfastCartList =
                                                  [];

                                              FFAppState()
                                                  .deleteLunchCartList();
                                              FFAppState().lunchCartList = [];

                                              FFAppState()
                                                  .deleteDinnerCartList();
                                              FFAppState().dinnerCartList = [];

                                              FFAppState()
                                                  .deleteSnackCartList();
                                              FFAppState().snackCartList = [];
                                            });
                                          },
                                          text: 'Clear Cart',
                                          options: FFButtonOptions(
                                            width: 60,
                                            height: 30,
                                            padding:
                                                EdgeInsetsDirectional.fromSTEB(
                                                    0, 0, 0, 0),
                                            iconPadding:
                                                EdgeInsetsDirectional.fromSTEB(
                                                    0, 0, 0, 0),
                                            color: FlutterFlowTheme.of(context)
                                                .alternate,
                                            textStyle:
                                                FlutterFlowTheme.of(context)
                                                    .bodyMedium
                                                    .override(
                                                      fontFamily: 'Readex Pro',
                                                      fontSize: 10,
                                                    ),
                                            elevation: 3,
                                            borderSide: BorderSide(
                                              color: Colors.transparent,
                                              width: 1,
                                            ),
                                            borderRadius:
                                                BorderRadius.circular(8),
                                          ),
                                        ),
                                      ],
                                    ),
                                    Padding(
                                      padding: EdgeInsetsDirectional.fromSTEB(
                                          0, 0, 0, 12),
                                      child: Builder(
                                        builder: (context) {
                                          final breakfastItemsCart =
                                              FFAppState()
                                                  .breakfastCartList
                                                  .toList();
                                          return ListView.builder(
                                            padding: EdgeInsets.zero,
                                            shrinkWrap: true,
                                            scrollDirection: Axis.vertical,
                                            itemCount:
                                                breakfastItemsCart.length,
                                            itemBuilder: (context,
                                                breakfastItemsCartIndex) {
                                              final breakfastItemsCartItem =
                                                  breakfastItemsCart[
                                                      breakfastItemsCartIndex];
                                              return Column(
                                                mainAxisSize: MainAxisSize.max,
                                                children: [
                                                  Padding(
                                                    padding:
                                                        EdgeInsetsDirectional
                                                            .fromSTEB(
                                                                0, 0, 0, 12),
                                                    child: Container(
                                                      width: MediaQuery.sizeOf(
                                                              context)
                                                          .width,
                                                      decoration: BoxDecoration(
                                                        color: FlutterFlowTheme
                                                                .of(context)
                                                            .secondaryBackground,
                                                        boxShadow: [
                                                          BoxShadow(
                                                            blurRadius: 0,
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .alternate,
                                                            offset:
                                                                Offset(0, 1),
                                                          )
                                                        ],
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(0),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                            EdgeInsetsDirectional
                                                                .fromSTEB(0, 4,
                                                                    0, 12),
                                                        child: StreamBuilder<
                                                            BreakfastRecord>(
                                                          stream: BreakfastRecord
                                                              .getDocument(
                                                                  breakfastItemsCartItem
                                                                      .bfRef!),
                                                          builder: (context,
                                                              snapshot) {
                                                            // Customize what your widget looks like when it's loading.
                                                            if (!snapshot
                                                                .hasData) {
                                                              return Center(
                                                                child: SizedBox(
                                                                  width: 50,
                                                                  height: 50,
                                                                  child:
                                                                      SpinKitRipple(
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .tertiary,
                                                                    size: 50,
                                                                  ),
                                                                ),
                                                              );
                                                            }
                                                            final rowBreakfastRecord =
                                                                snapshot.data!;
                                                            return Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .max,
                                                              children: [
                                                                Padding(
                                                                  padding: EdgeInsetsDirectional
                                                                      .fromSTEB(
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          1),
                                                                  child:
                                                                      ClipRRect(
                                                                    borderRadius:
                                                                        BorderRadius.circular(
                                                                            12),
                                                                    child: Image
                                                                        .network(
                                                                      rowBreakfastRecord
                                                                          .breakfastItem
                                                                          .photoUrl,
                                                                      width: 70,
                                                                      height:
                                                                          70,
                                                                      fit: BoxFit
                                                                          .cover,
                                                                    ),
                                                                  ),
                                                                ),
                                                                Padding(
                                                                  padding: EdgeInsetsDirectional
                                                                      .fromSTEB(
                                                                          8,
                                                                          0,
                                                                          4,
                                                                          0),
                                                                  child: Column(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .max,
                                                                    mainAxisAlignment:
                                                                        MainAxisAlignment
                                                                            .center,
                                                                    crossAxisAlignment:
                                                                        CrossAxisAlignment
                                                                            .start,
                                                                    children: [
                                                                      Text(
                                                                        rowBreakfastRecord
                                                                            .breakfastItem
                                                                            .name,
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .titleLarge
                                                                            .override(
                                                                              fontFamily: 'Outfit',
                                                                              fontSize: 16,
                                                                            ),
                                                                      ),
                                                                      Text(
                                                                        breakfastItemsCartItem
                                                                            .itemType,
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .titleLarge
                                                                            .override(
                                                                              fontFamily: 'Outfit',
                                                                              fontSize: 16,
                                                                            ),
                                                                      ),
                                                                      Align(
                                                                        alignment: AlignmentDirectional(
                                                                            -1.00,
                                                                            0.00),
                                                                        child:
                                                                            Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              0,
                                                                              0,
                                                                              4,
                                                                              0),
                                                                          child:
                                                                              RichText(
                                                                            textScaleFactor:
                                                                                MediaQuery.of(context).textScaleFactor,
                                                                            text:
                                                                                TextSpan(
                                                                              children: [
                                                                                TextSpan(
                                                                                  text: 'Quantity: ',
                                                                                  style: TextStyle(),
                                                                                ),
                                                                                TextSpan(
                                                                                  text: breakfastItemsCartItem.quantity.toString(),
                                                                                  style: TextStyle(),
                                                                                )
                                                                              ],
                                                                              style: FlutterFlowTheme.of(context).labelSmall.override(
                                                                                    fontFamily: 'Readex Pro',
                                                                                    fontSize: 15,
                                                                                  ),
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                      Text(
                                                                        dateTimeFormat(
                                                                          'MMMMEEEEd',
                                                                          breakfastItemsCartItem
                                                                              .deliveryDate!,
                                                                          locale:
                                                                              FFLocalizations.of(context).languageCode,
                                                                        ),
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .bodyMedium,
                                                                      ),
                                                                      Padding(
                                                                        padding: EdgeInsetsDirectional.fromSTEB(
                                                                            0,
                                                                            2,
                                                                            0,
                                                                            5),
                                                                        child:
                                                                            Row(
                                                                          mainAxisSize:
                                                                              MainAxisSize.min,
                                                                          mainAxisAlignment:
                                                                              MainAxisAlignment.center,
                                                                          children: [
                                                                            if (functions.getIndex(FFAppState().breakfastCartList.toList(), rowBreakfastRecord.reference, 'Breakfast', null, null, null, null, breakfastItemsCartItem.deliveryDate!).toString() != '-1'
                                                                                ? true
                                                                                : false)
                                                                              FlutterFlowIconButton(
                                                                                borderColor: FlutterFlowTheme.of(context).primaryText,
                                                                                borderRadius: 20,
                                                                                borderWidth: 0,
                                                                                buttonSize: 25,
                                                                                fillColor: FlutterFlowTheme.of(context).alternate,
                                                                                icon: Icon(
                                                                                  Icons.delete_outline,
                                                                                  color: FlutterFlowTheme.of(context).primaryText,
                                                                                  size: 10,
                                                                                ),
                                                                                showLoadingIndicator: true,
                                                                                onPressed: () async {
                                                                                  logFirebaseEvent('CART_PAGE_removeItemFromCart_ON_TAP');
                                                                                  setState(() {
                                                                                    FFAppState().updateBreakfastCartListAtIndex(
                                                                                      functions.getIndex(FFAppState().breakfastCartList.toList(), rowBreakfastRecord.reference, 'Breakfast', null, null, null, null, breakfastItemsCartItem.deliveryDate!),
                                                                                      (e) => e
                                                                                        ..incrementQuantity(-1)
                                                                                        ..itemTotal = functions.calculateItemTotal(rowBreakfastRecord.breakfastItem.price, FFAppState().breakfastCartList[functions.getIndex(FFAppState().breakfastCartList.toList(), rowBreakfastRecord.reference, 'Breakfast', null, null, null, null, breakfastItemsCartItem.deliveryDate!)].quantity),
                                                                                    );
                                                                                  });
                                                                                  if (FFAppState().breakfastCartList[functions.getIndex(FFAppState().breakfastCartList.toList(), rowBreakfastRecord.reference, 'Breakfast', null, null, null, null, breakfastItemsCartItem.deliveryDate!)].quantity == 0) {
                                                                                    setState(() {
                                                                                      FFAppState().removeAtIndexFromBreakfastCartList(functions.getIndex(FFAppState().breakfastCartList.toList(), rowBreakfastRecord.reference, 'Breakfast', null, null, null, null, breakfastItemsCartItem.deliveryDate!));
                                                                                    });
                                                                                  }
                                                                                },
                                                                              ),
                                                                            if (functions.getIndex(FFAppState().breakfastCartList.toList(), rowBreakfastRecord.reference, 'Breakfast', null, null, null, null, breakfastItemsCartItem.deliveryDate!).toString() != '-1'
                                                                                ? true
                                                                                : false)
                                                                              Padding(
                                                                                padding: EdgeInsetsDirectional.fromSTEB(10, 0, 10, 0),
                                                                                child: Text(
                                                                                  functions.getIndex(FFAppState().breakfastCartList.toList(), rowBreakfastRecord.reference, 'Breakfast', null, null, null, null, breakfastItemsCartItem.deliveryDate!).toString() == '-1' ? '' : FFAppState().breakfastCartList[functions.getIndex(FFAppState().breakfastCartList.toList(), rowBreakfastRecord.reference, 'Breakfast', null, null, null, null, breakfastItemsCartItem.deliveryDate!)].quantity.toString().maybeHandleOverflow(maxChars: 2),
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium,
                                                                                ),
                                                                              ),
                                                                            FlutterFlowIconButton(
                                                                              borderColor: FlutterFlowTheme.of(context).primaryText,
                                                                              borderRadius: 20,
                                                                              borderWidth: 0,
                                                                              buttonSize: 25,
                                                                              fillColor: FlutterFlowTheme.of(context).tertiary,
                                                                              icon: Icon(
                                                                                Icons.add,
                                                                                color: FlutterFlowTheme.of(context).primaryText,
                                                                                size: 10,
                                                                              ),
                                                                              onPressed: () async {
                                                                                logFirebaseEvent('CART_PAGE_addItemToCart_ON_TAP');
                                                                                setState(() {
                                                                                  FFAppState().updateBreakfastCartListAtIndex(
                                                                                    functions.getIndex(FFAppState().breakfastCartList.toList(), rowBreakfastRecord.reference, 'Breakfast', null, null, null, null, breakfastItemsCartItem.deliveryDate!),
                                                                                    (e) => e
                                                                                      ..incrementQuantity(1)
                                                                                      ..itemTotal = functions.calculateItemTotal(rowBreakfastRecord.breakfastItem.price, FFAppState().breakfastCartList[functions.getIndex(FFAppState().breakfastCartList.toList(), rowBreakfastRecord.reference, 'Breakfast', null, null, null, null, breakfastItemsCartItem.deliveryDate!)].quantity),
                                                                                  );
                                                                                });
                                                                              },
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                                Expanded(
                                                                  child: Align(
                                                                    alignment:
                                                                        AlignmentDirectional(
                                                                            1.00,
                                                                            0.00),
                                                                    child:
                                                                        Padding(
                                                                      padding: EdgeInsetsDirectional
                                                                          .fromSTEB(
                                                                              8,
                                                                              0,
                                                                              0,
                                                                              0),
                                                                      child:
                                                                          Text(
                                                                        formatNumber(
                                                                          FFAppState()
                                                                              .breakfastCartList[breakfastItemsCartIndex]
                                                                              .itemTotal,
                                                                          formatType:
                                                                              FormatType.custom,
                                                                          currency:
                                                                              '₹',
                                                                          format:
                                                                              '',
                                                                          locale:
                                                                              '',
                                                                        ),
                                                                        textAlign:
                                                                            TextAlign.end,
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .titleLarge
                                                                            .override(
                                                                              fontFamily: 'Outfit',
                                                                              fontSize: 20,
                                                                            ),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ),
                                                              ],
                                                            );
                                                          },
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              );
                                            },
                                          );
                                        },
                                      ),
                                    ),
                                    Padding(
                                      padding: EdgeInsetsDirectional.fromSTEB(
                                          0, 0, 0, 12),
                                      child: Builder(
                                        builder: (context) {
                                          final lunchItemsCart = FFAppState()
                                              .lunchCartList
                                              .toList();
                                          return ListView.builder(
                                            padding: EdgeInsets.zero,
                                            shrinkWrap: true,
                                            scrollDirection: Axis.vertical,
                                            itemCount: lunchItemsCart.length,
                                            itemBuilder:
                                                (context, lunchItemsCartIndex) {
                                              final lunchItemsCartItem =
                                                  lunchItemsCart[
                                                      lunchItemsCartIndex];
                                              return Column(
                                                mainAxisSize: MainAxisSize.max,
                                                children: [
                                                  Padding(
                                                    padding:
                                                        EdgeInsetsDirectional
                                                            .fromSTEB(
                                                                0, 0, 0, 12),
                                                    child: Container(
                                                      width: MediaQuery.sizeOf(
                                                              context)
                                                          .width,
                                                      decoration: BoxDecoration(
                                                        color: FlutterFlowTheme
                                                                .of(context)
                                                            .secondaryBackground,
                                                        boxShadow: [
                                                          BoxShadow(
                                                            blurRadius: 0,
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .alternate,
                                                            offset:
                                                                Offset(0, 1),
                                                          )
                                                        ],
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(0),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                            EdgeInsetsDirectional
                                                                .fromSTEB(0, 4,
                                                                    0, 12),
                                                        child: StreamBuilder<
                                                            LunchRecord>(
                                                          stream: LunchRecord
                                                              .getDocument(
                                                                  lunchItemsCartItem
                                                                      .lunchRef!),
                                                          builder: (context,
                                                              snapshot) {
                                                            // Customize what your widget looks like when it's loading.
                                                            if (!snapshot
                                                                .hasData) {
                                                              return Center(
                                                                child: SizedBox(
                                                                  width: 50,
                                                                  height: 50,
                                                                  child:
                                                                      SpinKitRipple(
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .tertiary,
                                                                    size: 50,
                                                                  ),
                                                                ),
                                                              );
                                                            }
                                                            final rowLunchRecord =
                                                                snapshot.data!;
                                                            return Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .max,
                                                              children: [
                                                                Padding(
                                                                  padding: EdgeInsetsDirectional
                                                                      .fromSTEB(
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          1),
                                                                  child:
                                                                      ClipRRect(
                                                                    borderRadius:
                                                                        BorderRadius.circular(
                                                                            12),
                                                                    child: Image
                                                                        .network(
                                                                      rowLunchRecord
                                                                          .lunchItem
                                                                          .photoUrl,
                                                                      width: 70,
                                                                      height:
                                                                          70,
                                                                      fit: BoxFit
                                                                          .cover,
                                                                    ),
                                                                  ),
                                                                ),
                                                                Padding(
                                                                  padding: EdgeInsetsDirectional
                                                                      .fromSTEB(
                                                                          8,
                                                                          0,
                                                                          4,
                                                                          0),
                                                                  child: Column(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .max,
                                                                    mainAxisAlignment:
                                                                        MainAxisAlignment
                                                                            .center,
                                                                    crossAxisAlignment:
                                                                        CrossAxisAlignment
                                                                            .start,
                                                                    children: [
                                                                      Text(
                                                                        rowLunchRecord
                                                                            .lunchItem
                                                                            .name,
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .titleLarge
                                                                            .override(
                                                                              fontFamily: 'Outfit',
                                                                              fontSize: 16,
                                                                            ),
                                                                      ),
                                                                      Text(
                                                                        lunchItemsCartItem
                                                                            .itemType,
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .titleLarge
                                                                            .override(
                                                                              fontFamily: 'Outfit',
                                                                              fontSize: 16,
                                                                            ),
                                                                      ),
                                                                      Align(
                                                                        alignment: AlignmentDirectional(
                                                                            -1.00,
                                                                            0.00),
                                                                        child:
                                                                            Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              0,
                                                                              0,
                                                                              4,
                                                                              0),
                                                                          child:
                                                                              RichText(
                                                                            textScaleFactor:
                                                                                MediaQuery.of(context).textScaleFactor,
                                                                            text:
                                                                                TextSpan(
                                                                              children: [
                                                                                TextSpan(
                                                                                  text: 'Quantity: ',
                                                                                  style: TextStyle(),
                                                                                ),
                                                                                TextSpan(
                                                                                  text: lunchItemsCartItem.quantity.toString(),
                                                                                  style: TextStyle(),
                                                                                )
                                                                              ],
                                                                              style: FlutterFlowTheme.of(context).labelSmall.override(
                                                                                    fontFamily: 'Readex Pro',
                                                                                    fontSize: 15,
                                                                                  ),
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                      Text(
                                                                        dateTimeFormat(
                                                                          'MMMMEEEEd',
                                                                          lunchItemsCartItem
                                                                              .deliveryDate!,
                                                                          locale:
                                                                              FFLocalizations.of(context).languageCode,
                                                                        ),
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .bodyMedium,
                                                                      ),
                                                                      Padding(
                                                                        padding: EdgeInsetsDirectional.fromSTEB(
                                                                            0,
                                                                            2,
                                                                            0,
                                                                            5),
                                                                        child:
                                                                            Row(
                                                                          mainAxisSize:
                                                                              MainAxisSize.min,
                                                                          mainAxisAlignment:
                                                                              MainAxisAlignment.center,
                                                                          children: [
                                                                            if (functions.getIndex(FFAppState().lunchCartList.toList(), null, 'Lunch', rowLunchRecord.reference, null, null, null, lunchItemsCartItem.deliveryDate!).toString() != '-1'
                                                                                ? true
                                                                                : false)
                                                                              FlutterFlowIconButton(
                                                                                borderColor: FlutterFlowTheme.of(context).primaryText,
                                                                                borderRadius: 20,
                                                                                borderWidth: 0,
                                                                                buttonSize: 25,
                                                                                fillColor: FlutterFlowTheme.of(context).alternate,
                                                                                icon: Icon(
                                                                                  Icons.delete_outline,
                                                                                  color: FlutterFlowTheme.of(context).primaryText,
                                                                                  size: 10,
                                                                                ),
                                                                                showLoadingIndicator: true,
                                                                                onPressed: () async {
                                                                                  logFirebaseEvent('CART_PAGE_removeItemFromCart_ON_TAP');
                                                                                  setState(() {
                                                                                    FFAppState().updateLunchCartListAtIndex(
                                                                                      functions.getIndex(FFAppState().lunchCartList.toList(), null, 'Lunch', rowLunchRecord.reference, null, null, null, lunchItemsCartItem.deliveryDate!),
                                                                                      (e) => e
                                                                                        ..incrementQuantity(-1)
                                                                                        ..itemTotal = functions.calculateItemTotal(rowLunchRecord.lunchItem.price, FFAppState().lunchCartList[functions.getIndex(FFAppState().lunchCartList.toList(), null, 'Lunch', rowLunchRecord.reference, null, null, null, lunchItemsCartItem.deliveryDate!)].quantity),
                                                                                    );
                                                                                  });
                                                                                  if (FFAppState().lunchCartList[functions.getIndex(FFAppState().lunchCartList.toList(), null, 'Lunch', rowLunchRecord.reference, null, null, null, lunchItemsCartItem.deliveryDate!)].quantity == 0) {
                                                                                    setState(() {
                                                                                      FFAppState().removeAtIndexFromLunchCartList(functions.getIndex(FFAppState().lunchCartList.toList(), null, 'Lunch', rowLunchRecord.reference, null, null, null, lunchItemsCartItem.deliveryDate!));
                                                                                    });
                                                                                  }
                                                                                },
                                                                              ),
                                                                            if (functions.getIndex(FFAppState().lunchCartList.toList(), null, 'Lunch', rowLunchRecord.reference, null, null, null, lunchItemsCartItem.deliveryDate!).toString() != '-1'
                                                                                ? true
                                                                                : false)
                                                                              Padding(
                                                                                padding: EdgeInsetsDirectional.fromSTEB(10, 0, 10, 0),
                                                                                child: Text(
                                                                                  functions.getIndex(FFAppState().lunchCartList.toList(), null, 'Lunch', rowLunchRecord.reference, null, null, null, lunchItemsCartItem.deliveryDate!).toString() == '-1' ? '' : FFAppState().lunchCartList[functions.getIndex(FFAppState().lunchCartList.toList(), null, 'Lunch', rowLunchRecord.reference, null, null, null, lunchItemsCartItem.deliveryDate!)].quantity.toString().maybeHandleOverflow(maxChars: 2),
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium,
                                                                                ),
                                                                              ),
                                                                            FlutterFlowIconButton(
                                                                              borderColor: FlutterFlowTheme.of(context).primaryText,
                                                                              borderRadius: 20,
                                                                              borderWidth: 0,
                                                                              buttonSize: 25,
                                                                              fillColor: FlutterFlowTheme.of(context).tertiary,
                                                                              icon: Icon(
                                                                                Icons.add,
                                                                                color: FlutterFlowTheme.of(context).primaryText,
                                                                                size: 10,
                                                                              ),
                                                                              onPressed: () async {
                                                                                logFirebaseEvent('CART_PAGE_addItemToCart_ON_TAP');
                                                                                setState(() {
                                                                                  FFAppState().updateLunchCartListAtIndex(
                                                                                    functions.getIndex(FFAppState().lunchCartList.toList(), null, 'Lunch', rowLunchRecord.reference, null, null, null, lunchItemsCartItem.deliveryDate!),
                                                                                    (e) => e
                                                                                      ..incrementQuantity(1)
                                                                                      ..itemTotal = functions.calculateItemTotal(rowLunchRecord.lunchItem.price, FFAppState().lunchCartList[functions.getIndex(FFAppState().lunchCartList.toList(), null, 'Lunch', rowLunchRecord.reference, null, null, null, lunchItemsCartItem.deliveryDate!)].quantity),
                                                                                  );
                                                                                });
                                                                              },
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                                Expanded(
                                                                  child: Align(
                                                                    alignment:
                                                                        AlignmentDirectional(
                                                                            1.00,
                                                                            0.00),
                                                                    child:
                                                                        Padding(
                                                                      padding: EdgeInsetsDirectional
                                                                          .fromSTEB(
                                                                              8,
                                                                              0,
                                                                              0,
                                                                              0),
                                                                      child:
                                                                          Text(
                                                                        formatNumber(
                                                                          lunchItemsCartItem
                                                                              .itemTotal,
                                                                          formatType:
                                                                              FormatType.custom,
                                                                          currency:
                                                                              '₹',
                                                                          format:
                                                                              '',
                                                                          locale:
                                                                              '',
                                                                        ),
                                                                        textAlign:
                                                                            TextAlign.end,
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .titleLarge
                                                                            .override(
                                                                              fontFamily: 'Outfit',
                                                                              fontSize: 20,
                                                                            ),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ),
                                                              ],
                                                            );
                                                          },
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              );
                                            },
                                          );
                                        },
                                      ),
                                    ),
                                    Padding(
                                      padding: EdgeInsetsDirectional.fromSTEB(
                                          0, 0, 0, 12),
                                      child: Builder(
                                        builder: (context) {
                                          final dinnerItemsCart = FFAppState()
                                              .dinnerCartList
                                              .toList();
                                          return ListView.builder(
                                            padding: EdgeInsets.zero,
                                            shrinkWrap: true,
                                            scrollDirection: Axis.vertical,
                                            itemCount: dinnerItemsCart.length,
                                            itemBuilder: (context,
                                                dinnerItemsCartIndex) {
                                              final dinnerItemsCartItem =
                                                  dinnerItemsCart[
                                                      dinnerItemsCartIndex];
                                              return Column(
                                                mainAxisSize: MainAxisSize.max,
                                                children: [
                                                  Padding(
                                                    padding:
                                                        EdgeInsetsDirectional
                                                            .fromSTEB(
                                                                0, 0, 0, 12),
                                                    child: Container(
                                                      width: MediaQuery.sizeOf(
                                                              context)
                                                          .width,
                                                      decoration: BoxDecoration(
                                                        color: FlutterFlowTheme
                                                                .of(context)
                                                            .secondaryBackground,
                                                        boxShadow: [
                                                          BoxShadow(
                                                            blurRadius: 0,
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .alternate,
                                                            offset:
                                                                Offset(0, 1),
                                                          )
                                                        ],
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(0),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                            EdgeInsetsDirectional
                                                                .fromSTEB(0, 4,
                                                                    0, 12),
                                                        child: StreamBuilder<
                                                            LunchRecord>(
                                                          stream: LunchRecord
                                                              .getDocument(
                                                                  dinnerItemsCartItem
                                                                      .dinnerRef!),
                                                          builder: (context,
                                                              snapshot) {
                                                            // Customize what your widget looks like when it's loading.
                                                            if (!snapshot
                                                                .hasData) {
                                                              return Center(
                                                                child: SizedBox(
                                                                  width: 50,
                                                                  height: 50,
                                                                  child:
                                                                      SpinKitRipple(
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .tertiary,
                                                                    size: 50,
                                                                  ),
                                                                ),
                                                              );
                                                            }
                                                            final rowLunchRecord =
                                                                snapshot.data!;
                                                            return Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .max,
                                                              children: [
                                                                Padding(
                                                                  padding: EdgeInsetsDirectional
                                                                      .fromSTEB(
                                                                          0,
                                                                          1,
                                                                          1,
                                                                          1),
                                                                  child:
                                                                      ClipRRect(
                                                                    borderRadius:
                                                                        BorderRadius.circular(
                                                                            12),
                                                                    child: Image
                                                                        .network(
                                                                      rowLunchRecord
                                                                          .lunchItem
                                                                          .photoUrl,
                                                                      width: 70,
                                                                      height:
                                                                          70,
                                                                      fit: BoxFit
                                                                          .cover,
                                                                    ),
                                                                  ),
                                                                ),
                                                                Padding(
                                                                  padding: EdgeInsetsDirectional
                                                                      .fromSTEB(
                                                                          8,
                                                                          0,
                                                                          4,
                                                                          0),
                                                                  child: Column(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .max,
                                                                    mainAxisAlignment:
                                                                        MainAxisAlignment
                                                                            .center,
                                                                    crossAxisAlignment:
                                                                        CrossAxisAlignment
                                                                            .start,
                                                                    children: [
                                                                      Text(
                                                                        rowLunchRecord
                                                                            .lunchItem
                                                                            .name,
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .titleLarge
                                                                            .override(
                                                                              fontFamily: 'Outfit',
                                                                              fontSize: 16,
                                                                            ),
                                                                      ),
                                                                      Text(
                                                                        dinnerItemsCartItem
                                                                            .itemType,
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .titleLarge
                                                                            .override(
                                                                              fontFamily: 'Outfit',
                                                                              fontSize: 16,
                                                                            ),
                                                                      ),
                                                                      Align(
                                                                        alignment: AlignmentDirectional(
                                                                            -1.00,
                                                                            0.00),
                                                                        child:
                                                                            Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              0,
                                                                              0,
                                                                              4,
                                                                              0),
                                                                          child:
                                                                              RichText(
                                                                            textScaleFactor:
                                                                                MediaQuery.of(context).textScaleFactor,
                                                                            text:
                                                                                TextSpan(
                                                                              children: [
                                                                                TextSpan(
                                                                                  text: 'Quantity: ',
                                                                                  style: TextStyle(),
                                                                                ),
                                                                                TextSpan(
                                                                                  text: dinnerItemsCartItem.quantity.toString(),
                                                                                  style: TextStyle(),
                                                                                )
                                                                              ],
                                                                              style: FlutterFlowTheme.of(context).labelSmall.override(
                                                                                    fontFamily: 'Readex Pro',
                                                                                    fontSize: 15,
                                                                                  ),
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                      Text(
                                                                        dateTimeFormat(
                                                                          'MMMMEEEEd',
                                                                          dinnerItemsCartItem
                                                                              .deliveryDate!,
                                                                          locale:
                                                                              FFLocalizations.of(context).languageCode,
                                                                        ),
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .bodyMedium,
                                                                      ),
                                                                      Padding(
                                                                        padding: EdgeInsetsDirectional.fromSTEB(
                                                                            0,
                                                                            2,
                                                                            0,
                                                                            5),
                                                                        child:
                                                                            Row(
                                                                          mainAxisSize:
                                                                              MainAxisSize.min,
                                                                          mainAxisAlignment:
                                                                              MainAxisAlignment.center,
                                                                          children: [
                                                                            if (functions.getIndex(FFAppState().dinnerCartList.toList(), null, 'Dinner', null, rowLunchRecord.reference, null, null, dinnerItemsCartItem.deliveryDate!).toString() != '-1'
                                                                                ? true
                                                                                : false)
                                                                              FlutterFlowIconButton(
                                                                                borderColor: FlutterFlowTheme.of(context).primaryText,
                                                                                borderRadius: 20,
                                                                                borderWidth: 0,
                                                                                buttonSize: 25,
                                                                                fillColor: FlutterFlowTheme.of(context).alternate,
                                                                                icon: Icon(
                                                                                  Icons.delete_outline,
                                                                                  color: FlutterFlowTheme.of(context).primaryText,
                                                                                  size: 10,
                                                                                ),
                                                                                showLoadingIndicator: true,
                                                                                onPressed: () async {
                                                                                  logFirebaseEvent('CART_PAGE_removeItemFromCart_ON_TAP');
                                                                                  setState(() {
                                                                                    FFAppState().updateDinnerCartListAtIndex(
                                                                                      functions.getIndex(FFAppState().dinnerCartList.toList(), null, 'Dinner', null, rowLunchRecord.reference, null, null, dinnerItemsCartItem.deliveryDate!),
                                                                                      (e) => e
                                                                                        ..incrementQuantity(-1)
                                                                                        ..itemTotal = functions.calculateItemTotal(rowLunchRecord.lunchItem.price, FFAppState().dinnerCartList[functions.getIndex(FFAppState().dinnerCartList.toList(), null, 'Dinner', null, rowLunchRecord.reference, null, null, dinnerItemsCartItem.deliveryDate!)].quantity),
                                                                                    );
                                                                                  });
                                                                                  if (FFAppState().dinnerCartList[functions.getIndex(FFAppState().dinnerCartList.toList(), null, 'Dinner', null, rowLunchRecord.reference, null, null, dinnerItemsCartItem.deliveryDate!)].quantity == 0) {
                                                                                    setState(() {
                                                                                      FFAppState().removeAtIndexFromDinnerCartList(functions.getIndex(FFAppState().dinnerCartList.toList(), null, 'Dinner', null, rowLunchRecord.reference, null, null, dinnerItemsCartItem.deliveryDate!));
                                                                                    });
                                                                                  }
                                                                                },
                                                                              ),
                                                                            if (functions.getIndex(FFAppState().dinnerCartList.toList(), null, 'Dinner', null, rowLunchRecord.reference, null, null, dinnerItemsCartItem.deliveryDate!) != -1
                                                                                ? true
                                                                                : false)
                                                                              Padding(
                                                                                padding: EdgeInsetsDirectional.fromSTEB(10, 0, 10, 0),
                                                                                child: Text(
                                                                                  functions.getIndex(FFAppState().dinnerCartList.toList(), null, 'Dinner', null, rowLunchRecord.reference, null, null, dinnerItemsCartItem.deliveryDate!) == -1 ? '' : FFAppState().dinnerCartList[functions.getIndex(FFAppState().dinnerCartList.toList(), null, 'Dinner', null, rowLunchRecord.reference, null, null, dinnerItemsCartItem.deliveryDate!)].quantity.toString().maybeHandleOverflow(maxChars: 2),
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium,
                                                                                ),
                                                                              ),
                                                                            FlutterFlowIconButton(
                                                                              borderColor: FlutterFlowTheme.of(context).primaryText,
                                                                              borderRadius: 20,
                                                                              borderWidth: 0,
                                                                              buttonSize: 25,
                                                                              fillColor: FlutterFlowTheme.of(context).tertiary,
                                                                              icon: Icon(
                                                                                Icons.add,
                                                                                color: FlutterFlowTheme.of(context).primaryText,
                                                                                size: 10,
                                                                              ),
                                                                              onPressed: () async {
                                                                                logFirebaseEvent('CART_PAGE_addItemToCart_ON_TAP');
                                                                                setState(() {
                                                                                  FFAppState().updateDinnerCartListAtIndex(
                                                                                    functions.getIndex(FFAppState().dinnerCartList.toList(), null, 'Dinner', null, rowLunchRecord.reference, null, null, dinnerItemsCartItem.deliveryDate!),
                                                                                    (e) => e
                                                                                      ..incrementQuantity(1)
                                                                                      ..itemTotal = functions.calculateItemTotal(rowLunchRecord.lunchItem.price, FFAppState().dinnerCartList[functions.getIndex(FFAppState().dinnerCartList.toList(), null, 'Dinner', null, rowLunchRecord.reference, null, null, dinnerItemsCartItem.deliveryDate!)].quantity),
                                                                                  );
                                                                                });
                                                                              },
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                                Expanded(
                                                                  child: Align(
                                                                    alignment:
                                                                        AlignmentDirectional(
                                                                            1.00,
                                                                            0.00),
                                                                    child:
                                                                        Padding(
                                                                      padding: EdgeInsetsDirectional
                                                                          .fromSTEB(
                                                                              8,
                                                                              0,
                                                                              0,
                                                                              0),
                                                                      child:
                                                                          Text(
                                                                        formatNumber(
                                                                          FFAppState()
                                                                              .dinnerCartList[dinnerItemsCartIndex]
                                                                              .itemTotal,
                                                                          formatType:
                                                                              FormatType.custom,
                                                                          currency:
                                                                              '₹',
                                                                          format:
                                                                              '',
                                                                          locale:
                                                                              '',
                                                                        ),
                                                                        textAlign:
                                                                            TextAlign.end,
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .titleLarge
                                                                            .override(
                                                                              fontFamily: 'Outfit',
                                                                              fontSize: 20,
                                                                            ),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ),
                                                              ],
                                                            );
                                                          },
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              );
                                            },
                                          );
                                        },
                                      ),
                                    ),
                                    Padding(
                                      padding: EdgeInsetsDirectional.fromSTEB(
                                          0, 0, 0, 12),
                                      child: Builder(
                                        builder: (context) {
                                          final snacksItemsCart = FFAppState()
                                              .snackCartList
                                              .toList();
                                          return ListView.builder(
                                            padding: EdgeInsets.zero,
                                            shrinkWrap: true,
                                            scrollDirection: Axis.vertical,
                                            itemCount: snacksItemsCart.length,
                                            itemBuilder: (context,
                                                snacksItemsCartIndex) {
                                              final snacksItemsCartItem =
                                                  snacksItemsCart[
                                                      snacksItemsCartIndex];
                                              return Column(
                                                mainAxisSize: MainAxisSize.max,
                                                children: [
                                                  Padding(
                                                    padding:
                                                        EdgeInsetsDirectional
                                                            .fromSTEB(
                                                                0, 0, 0, 12),
                                                    child: Container(
                                                      width: MediaQuery.sizeOf(
                                                              context)
                                                          .width,
                                                      decoration: BoxDecoration(
                                                        color: FlutterFlowTheme
                                                                .of(context)
                                                            .secondaryBackground,
                                                        boxShadow: [
                                                          BoxShadow(
                                                            blurRadius: 0,
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .alternate,
                                                            offset:
                                                                Offset(0, 1),
                                                          )
                                                        ],
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(0),
                                                      ),
                                                      child: Padding(
                                                        padding:
                                                            EdgeInsetsDirectional
                                                                .fromSTEB(0, 4,
                                                                    0, 12),
                                                        child: StreamBuilder<
                                                            SnacksRecord>(
                                                          stream: SnacksRecord
                                                              .getDocument(
                                                                  snacksItemsCartItem
                                                                      .snackRef!),
                                                          builder: (context,
                                                              snapshot) {
                                                            // Customize what your widget looks like when it's loading.
                                                            if (!snapshot
                                                                .hasData) {
                                                              return Center(
                                                                child: SizedBox(
                                                                  width: 50,
                                                                  height: 50,
                                                                  child:
                                                                      SpinKitRipple(
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .tertiary,
                                                                    size: 50,
                                                                  ),
                                                                ),
                                                              );
                                                            }
                                                            final rowSnacksRecord =
                                                                snapshot.data!;
                                                            return Row(
                                                              mainAxisSize:
                                                                  MainAxisSize
                                                                      .max,
                                                              children: [
                                                                ClipRRect(
                                                                  borderRadius:
                                                                      BorderRadius
                                                                          .circular(
                                                                              8),
                                                                  child: Image
                                                                      .network(
                                                                    rowSnacksRecord
                                                                        .snacksItem
                                                                        .photoUrl,
                                                                    width: 70,
                                                                    height: 70,
                                                                    fit: BoxFit
                                                                        .cover,
                                                                  ),
                                                                ),
                                                                Padding(
                                                                  padding: EdgeInsetsDirectional
                                                                      .fromSTEB(
                                                                          8,
                                                                          0,
                                                                          4,
                                                                          0),
                                                                  child: Column(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .max,
                                                                    mainAxisAlignment:
                                                                        MainAxisAlignment
                                                                            .center,
                                                                    crossAxisAlignment:
                                                                        CrossAxisAlignment
                                                                            .start,
                                                                    children: [
                                                                      Text(
                                                                        rowSnacksRecord
                                                                            .snacksItem
                                                                            .name,
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .titleLarge
                                                                            .override(
                                                                              fontFamily: 'Outfit',
                                                                              fontSize: 16,
                                                                            ),
                                                                      ),
                                                                      Text(
                                                                        snacksItemsCartItem
                                                                            .itemType,
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .titleLarge
                                                                            .override(
                                                                              fontFamily: 'Outfit',
                                                                              fontSize: 16,
                                                                            ),
                                                                      ),
                                                                      Align(
                                                                        alignment: AlignmentDirectional(
                                                                            -1.00,
                                                                            0.00),
                                                                        child:
                                                                            Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              0,
                                                                              0,
                                                                              4,
                                                                              0),
                                                                          child:
                                                                              RichText(
                                                                            textScaleFactor:
                                                                                MediaQuery.of(context).textScaleFactor,
                                                                            text:
                                                                                TextSpan(
                                                                              children: [
                                                                                TextSpan(
                                                                                  text: 'Snack For: ',
                                                                                  style: TextStyle(),
                                                                                ),
                                                                                TextSpan(
                                                                                  text: snacksItemsCartItem.snackFor,
                                                                                  style: TextStyle(),
                                                                                )
                                                                              ],
                                                                              style: FlutterFlowTheme.of(context).labelSmall.override(
                                                                                    fontFamily: 'Readex Pro',
                                                                                    fontSize: 15,
                                                                                  ),
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                      Align(
                                                                        alignment: AlignmentDirectional(
                                                                            -1.00,
                                                                            0.00),
                                                                        child:
                                                                            Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              0,
                                                                              0,
                                                                              4,
                                                                              0),
                                                                          child:
                                                                              RichText(
                                                                            textScaleFactor:
                                                                                MediaQuery.of(context).textScaleFactor,
                                                                            text:
                                                                                TextSpan(
                                                                              children: [
                                                                                TextSpan(
                                                                                  text: 'Quantity: ',
                                                                                  style: TextStyle(),
                                                                                ),
                                                                                TextSpan(
                                                                                  text: snacksItemsCartItem.quantity.toString(),
                                                                                  style: TextStyle(),
                                                                                )
                                                                              ],
                                                                              style: FlutterFlowTheme.of(context).labelSmall.override(
                                                                                    fontFamily: 'Readex Pro',
                                                                                    fontSize: 15,
                                                                                  ),
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                      Text(
                                                                        dateTimeFormat(
                                                                          'MMMMEEEEd',
                                                                          snacksItemsCartItem
                                                                              .deliveryDate!,
                                                                          locale:
                                                                              FFLocalizations.of(context).languageCode,
                                                                        ),
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .bodyMedium,
                                                                      ),
                                                                      Padding(
                                                                        padding: EdgeInsetsDirectional.fromSTEB(
                                                                            0,
                                                                            2,
                                                                            0,
                                                                            5),
                                                                        child:
                                                                            Row(
                                                                          mainAxisSize:
                                                                              MainAxisSize.min,
                                                                          mainAxisAlignment:
                                                                              MainAxisAlignment.center,
                                                                          children: [
                                                                            FlutterFlowIconButton(
                                                                              borderColor: FlutterFlowTheme.of(context).primaryText,
                                                                              borderRadius: 20,
                                                                              borderWidth: 0,
                                                                              buttonSize: 25,
                                                                              fillColor: FlutterFlowTheme.of(context).alternate,
                                                                              icon: Icon(
                                                                                Icons.delete_outline,
                                                                                color: FlutterFlowTheme.of(context).primaryText,
                                                                                size: 10,
                                                                              ),
                                                                              showLoadingIndicator: true,
                                                                              onPressed: () async {
                                                                                logFirebaseEvent('CART_PAGE_removeItemFromCart_ON_TAP');
                                                                                if (snacksItemsCartItem.snackFor == 'Breakfast') {
                                                                                  setState(() {
                                                                                    FFAppState().updateSnackCartListAtIndex(
                                                                                      functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, rowSnacksRecord.reference, 'Breakfast', snacksItemsCartItem.deliveryDate!),
                                                                                      (e) => e
                                                                                        ..incrementQuantity(-1)
                                                                                        ..itemTotal = functions.calculateItemTotal(rowSnacksRecord.snacksItem.price, FFAppState().snackCartList[functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, rowSnacksRecord.reference, 'Breakfast', snacksItemsCartItem.deliveryDate!)].quantity),
                                                                                    );
                                                                                  });
                                                                                  if (FFAppState().snackCartList[functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, rowSnacksRecord.reference, 'Breakfast', snacksItemsCartItem.deliveryDate!)].quantity == 0) {
                                                                                    setState(() {
                                                                                      FFAppState().removeAtIndexFromSnackCartList(functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, rowSnacksRecord.reference, 'Breakfast', snacksItemsCartItem.deliveryDate!));
                                                                                    });
                                                                                  }
                                                                                } else if (snacksItemsCartItem.snackFor == 'Lunch') {
                                                                                  setState(() {
                                                                                    FFAppState().updateSnackCartListAtIndex(
                                                                                      functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, rowSnacksRecord.reference, 'Lunch', snacksItemsCartItem.deliveryDate!),
                                                                                      (e) => e
                                                                                        ..incrementQuantity(-1)
                                                                                        ..itemTotal = functions.calculateItemTotal(rowSnacksRecord.snacksItem.price, FFAppState().snackCartList[functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, rowSnacksRecord.reference, 'Lunch', snacksItemsCartItem.deliveryDate!)].quantity),
                                                                                    );
                                                                                  });
                                                                                  if (FFAppState().snackCartList[functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, rowSnacksRecord.reference, 'Lunch', snacksItemsCartItem.deliveryDate!)].quantity == 0) {
                                                                                    setState(() {
                                                                                      FFAppState().removeAtIndexFromSnackCartList(functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, rowSnacksRecord.reference, 'Lunch', snacksItemsCartItem.deliveryDate!));
                                                                                    });
                                                                                  }
                                                                                } else if (snacksItemsCartItem.snackFor == 'Dinner') {
                                                                                  setState(() {
                                                                                    FFAppState().updateSnackCartListAtIndex(
                                                                                      functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, snacksItemsCartItem.snackRef, 'Dinner', snacksItemsCartItem.deliveryDate!),
                                                                                      (e) => e
                                                                                        ..incrementQuantity(-1)
                                                                                        ..itemTotal = functions.calculateItemTotal(rowSnacksRecord.snacksItem.price, FFAppState().snackCartList[functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, rowSnacksRecord.reference, 'Dinner', snacksItemsCartItem.deliveryDate!)].quantity),
                                                                                    );
                                                                                  });
                                                                                  if (FFAppState().snackCartList[functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, rowSnacksRecord.reference, 'Dinner', snacksItemsCartItem.deliveryDate!)].quantity == 0) {
                                                                                    setState(() {
                                                                                      FFAppState().removeAtIndexFromSnackCartList(functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, rowSnacksRecord.reference, 'Dinner', snacksItemsCartItem.deliveryDate!));
                                                                                    });
                                                                                  }
                                                                                }
                                                                              },
                                                                            ),
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(10, 0, 10, 0),
                                                                              child: Text(
                                                                                snacksItemsCartItem.quantity.toString().maybeHandleOverflow(maxChars: 2),
                                                                                style: FlutterFlowTheme.of(context).bodyMedium,
                                                                              ),
                                                                            ),
                                                                            FlutterFlowIconButton(
                                                                              borderColor: FlutterFlowTheme.of(context).primaryText,
                                                                              borderRadius: 20,
                                                                              borderWidth: 0,
                                                                              buttonSize: 25,
                                                                              fillColor: FlutterFlowTheme.of(context).tertiary,
                                                                              icon: Icon(
                                                                                Icons.add,
                                                                                color: FlutterFlowTheme.of(context).primaryText,
                                                                                size: 10,
                                                                              ),
                                                                              onPressed: () async {
                                                                                logFirebaseEvent('CART_PAGE_addItemToCart_ON_TAP');
                                                                                if (snacksItemsCartItem.snackFor == 'Breakfast') {
                                                                                  setState(() {
                                                                                    FFAppState().updateSnackCartListAtIndex(
                                                                                      functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, snacksItemsCartItem.snackRef, 'Breakfast', snacksItemsCartItem.deliveryDate!),
                                                                                      (e) => e
                                                                                        ..incrementQuantity(1)
                                                                                        ..itemTotal = functions.calculateItemTotal(rowSnacksRecord.snacksItem.price, FFAppState().snackCartList[functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, rowSnacksRecord.reference, 'Breakfast', snacksItemsCartItem.deliveryDate!)].quantity),
                                                                                    );
                                                                                  });
                                                                                } else if (snacksItemsCartItem.snackFor == 'Lunch') {
                                                                                  setState(() {
                                                                                    FFAppState().updateSnackCartListAtIndex(
                                                                                      functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, snacksItemsCartItem.snackRef, 'Lunch', snacksItemsCartItem.deliveryDate!),
                                                                                      (e) => e
                                                                                        ..incrementQuantity(1)
                                                                                        ..itemTotal = functions.calculateItemTotal(rowSnacksRecord.snacksItem.price, FFAppState().snackCartList[functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, rowSnacksRecord.reference, 'Lunch', snacksItemsCartItem.deliveryDate!)].quantity),
                                                                                    );
                                                                                  });
                                                                                } else if (snacksItemsCartItem.snackFor == 'Dinner') {
                                                                                  setState(() {
                                                                                    FFAppState().updateSnackCartListAtIndex(
                                                                                      functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, snacksItemsCartItem.snackRef, 'Dinner', snacksItemsCartItem.deliveryDate!),
                                                                                      (e) => e
                                                                                        ..incrementQuantity(1)
                                                                                        ..itemTotal = functions.calculateItemTotal(rowSnacksRecord.snacksItem.price, FFAppState().snackCartList[functions.getIndex(FFAppState().snackCartList.toList(), null, 'Snack', null, null, snacksItemsCartItem.snackRef, 'Dinner', snacksItemsCartItem.deliveryDate!)].quantity),
                                                                                    );
                                                                                  });
                                                                                }
                                                                              },
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                                Expanded(
                                                                  child: Align(
                                                                    alignment:
                                                                        AlignmentDirectional(
                                                                            1.00,
                                                                            0.00),
                                                                    child:
                                                                        Padding(
                                                                      padding: EdgeInsetsDirectional
                                                                          .fromSTEB(
                                                                              8,
                                                                              0,
                                                                              0,
                                                                              0),
                                                                      child:
                                                                          Text(
                                                                        formatNumber(
                                                                          FFAppState()
                                                                              .snackCartList[snacksItemsCartIndex]
                                                                              .itemTotal,
                                                                          formatType:
                                                                              FormatType.custom,
                                                                          currency:
                                                                              '₹',
                                                                          format:
                                                                              '',
                                                                          locale:
                                                                              '',
                                                                        ),
                                                                        textAlign:
                                                                            TextAlign.end,
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .titleLarge
                                                                            .override(
                                                                              fontFamily: 'Outfit',
                                                                              fontSize: 20,
                                                                            ),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ),
                                                              ],
                                                            );
                                                          },
                                                        ),
                                                      ),
                                                    ),
                                                  ),
                                                ],
                                              );
                                            },
                                          );
                                        },
                                      ),
                                    ),
                                    if ((FFAppState().breakfastCartList.length ==
                                            0) &&
                                        (FFAppState().lunchCartList.length ==
                                            0) &&
                                        (FFAppState().dinnerCartList.length ==
                                            0) &&
                                        (FFAppState().snackCartList.length ==
                                            0))
                                      Container(
                                        width: MediaQuery.sizeOf(context).width,
                                        height: 100,
                                        decoration: BoxDecoration(
                                          color: FlutterFlowTheme.of(context)
                                              .secondaryBackground,
                                        ),
                                        child: wrapWithModel(
                                          model: _model.emptyCartModel,
                                          updateCallback: () => setState(() {}),
                                          child: EmptyCartWidget(),
                                        ),
                                      ),
                                    if ((FFAppState().breakfastCartList.length >
                                            0) ||
                                        (FFAppState().lunchCartList.length >
                                            0) ||
                                        (FFAppState().dinnerCartList.length >
                                            0) ||
                                        (FFAppState().snackCartList.length > 0))
                                      Padding(
                                        padding: EdgeInsetsDirectional.fromSTEB(
                                            0, 12, 0, 0),
                                        child: Column(
                                          mainAxisSize: MainAxisSize.max,
                                          crossAxisAlignment:
                                              CrossAxisAlignment.start,
                                          children: [
                                            Text(
                                              'Wallet Balance',
                                              style:
                                                  FlutterFlowTheme.of(context)
                                                      .titleLarge,
                                            ),
                                            Row(
                                              mainAxisSize: MainAxisSize.max,
                                              children: [
                                                ClipRRect(
                                                  borderRadius:
                                                      BorderRadius.circular(8),
                                                  child: Image.asset(
                                                    'assets/images/vecteezy_3d-business-wallet-finance-illustration_10175188_960-min.png',
                                                    width: 30,
                                                    height: 30,
                                                    fit: BoxFit.contain,
                                                  ),
                                                ),
                                                Padding(
                                                  padding: EdgeInsetsDirectional
                                                      .fromSTEB(10, 0, 0, 0),
                                                  child: AuthUserStreamWidget(
                                                    builder: (context) => Text(
                                                      ':  ₹${valueOrDefault(currentUserDocument?.walletBalance, 0.0).toString()}',
                                                      style:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .bodyMedium
                                                              .override(
                                                                fontFamily:
                                                                    'Readex Pro',
                                                                fontSize: 16,
                                                              ),
                                                    ),
                                                  ),
                                                ),
                                                Flexible(
                                                  child: Align(
                                                    alignment:
                                                        AlignmentDirectional(
                                                            1.00, 0.00),
                                                    child: FFButtonWidget(
                                                      onPressed: () async {
                                                        logFirebaseEvent(
                                                            'CART_PAGE_ADD_MONEY_BTN_ON_TAP');

                                                        context.pushNamed(
                                                          'wallet',
                                                          extra: <String,
                                                              dynamic>{
                                                            kTransitionInfoKey:
                                                                TransitionInfo(
                                                              hasTransition:
                                                                  true,
                                                              transitionType:
                                                                  PageTransitionType
                                                                      .fade,
                                                            ),
                                                          },
                                                        );
                                                      },
                                                      text: 'Add Money',
                                                      options: FFButtonOptions(
                                                        width: 105,
                                                        height: 30,
                                                        padding:
                                                            EdgeInsetsDirectional
                                                                .fromSTEB(
                                                                    0, 0, 0, 0),
                                                        iconPadding:
                                                            EdgeInsetsDirectional
                                                                .fromSTEB(
                                                                    0, 0, 0, 0),
                                                        color:
                                                            Color(0xFFFB2327),
                                                        textStyle:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .titleSmall
                                                                .override(
                                                                  fontFamily:
                                                                      'Readex Pro',
                                                                  color: Colors
                                                                      .white,
                                                                  fontSize: 12,
                                                                ),
                                                        elevation: 3,
                                                        borderSide: BorderSide(
                                                          color: Colors
                                                              .transparent,
                                                          width: 1,
                                                        ),
                                                        borderRadius:
                                                            BorderRadius
                                                                .circular(8),
                                                      ),
                                                    ),
                                                  ),
                                                ),
                                              ],
                                            ),
                                            Divider(
                                              height: 32,
                                              thickness: 2,
                                              color:
                                                  FlutterFlowTheme.of(context)
                                                      .alternate,
                                            ),
                                            Padding(
                                              padding: EdgeInsetsDirectional
                                                  .fromSTEB(0, 0, 0, 8),
                                              child: Column(
                                                mainAxisSize: MainAxisSize.max,
                                                crossAxisAlignment:
                                                    CrossAxisAlignment.start,
                                                children: [
                                                  Padding(
                                                    padding:
                                                        EdgeInsetsDirectional
                                                            .fromSTEB(
                                                                0, 0, 0, 12),
                                                    child: Text(
                                                      'Price Breakdown',
                                                      style:
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .labelMedium,
                                                    ),
                                                  ),
                                                  Padding(
                                                    padding:
                                                        EdgeInsetsDirectional
                                                            .fromSTEB(
                                                                0, 0, 0, 8),
                                                    child: Row(
                                                      mainAxisSize:
                                                          MainAxisSize.max,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceBetween,
                                                      children: [
                                                        Text(
                                                          'Base Price',
                                                          style: FlutterFlowTheme
                                                                  .of(context)
                                                              .bodySmall
                                                              .override(
                                                                fontFamily:
                                                                    'Outfit',
                                                                color: FlutterFlowTheme.of(
                                                                        context)
                                                                    .secondaryText,
                                                                fontSize: 14,
                                                                fontWeight:
                                                                    FontWeight
                                                                        .normal,
                                                              ),
                                                        ),
                                                        Text(
                                                          formatNumber(
                                                            functions.orderTotal(
                                                                    FFAppState()
                                                                        .breakfastCartList
                                                                        .map((e) => e
                                                                            .itemTotal)
                                                                        .toList(),
                                                                    FFAppState()
                                                                        .dinnerCartList
                                                                        .map((e) => e
                                                                            .itemTotal)
                                                                        .toList(),
                                                                    FFAppState()
                                                                        .lunchCartList
                                                                        .map((e) => e
                                                                            .itemTotal)
                                                                        .toList(),
                                                                    FFAppState()
                                                                        .snackCartList
                                                                        .map((e) =>
                                                                            e.itemTotal)
                                                                        .toList()) *
                                                                100 /
                                                                105,
                                                            formatType:
                                                                FormatType
                                                                    .custom,
                                                            currency: '₹',
                                                            format: '',
                                                            locale: '',
                                                          ),
                                                          textAlign:
                                                              TextAlign.end,
                                                          style: FlutterFlowTheme
                                                                  .of(context)
                                                              .bodyLarge,
                                                        ),
                                                      ],
                                                    ),
                                                  ),
                                                  Padding(
                                                    padding:
                                                        EdgeInsetsDirectional
                                                            .fromSTEB(
                                                                0, 0, 0, 8),
                                                    child: Row(
                                                      mainAxisSize:
                                                          MainAxisSize.max,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceBetween,
                                                      children: [
                                                        Text(
                                                          'GST (5%)',
                                                          style: FlutterFlowTheme
                                                                  .of(context)
                                                              .bodySmall
                                                              .override(
                                                                fontFamily:
                                                                    'Outfit',
                                                                color: FlutterFlowTheme.of(
                                                                        context)
                                                                    .secondaryText,
                                                                fontSize: 14,
                                                                fontWeight:
                                                                    FontWeight
                                                                        .normal,
                                                              ),
                                                        ),
                                                        Text(
                                                          formatNumber(
                                                            functions.orderTotal(
                                                                    FFAppState()
                                                                        .breakfastCartList
                                                                        .map((e) => e
                                                                            .itemTotal)
                                                                        .toList(),
                                                                    FFAppState()
                                                                        .dinnerCartList
                                                                        .map((e) => e
                                                                            .itemTotal)
                                                                        .toList(),
                                                                    FFAppState()
                                                                        .lunchCartList
                                                                        .map((e) => e
                                                                            .itemTotal)
                                                                        .toList(),
                                                                    FFAppState()
                                                                        .snackCartList
                                                                        .map((e) =>
                                                                            e.itemTotal)
                                                                        .toList()) /
                                                                21,
                                                            formatType:
                                                                FormatType
                                                                    .custom,
                                                            currency: '₹',
                                                            format: '',
                                                            locale: '',
                                                          ),
                                                          textAlign:
                                                              TextAlign.end,
                                                          style: FlutterFlowTheme
                                                                  .of(context)
                                                              .bodyLarge,
                                                        ),
                                                      ],
                                                    ),
                                                  ),
                                                  Padding(
                                                    padding:
                                                        EdgeInsetsDirectional
                                                            .fromSTEB(
                                                                0, 8, 0, 8),
                                                    child: Row(
                                                      mainAxisSize:
                                                          MainAxisSize.max,
                                                      mainAxisAlignment:
                                                          MainAxisAlignment
                                                              .spaceBetween,
                                                      children: [
                                                        Row(
                                                          mainAxisSize:
                                                              MainAxisSize.max,
                                                          children: [
                                                            Text(
                                                              'Total',
                                                              style: FlutterFlowTheme
                                                                      .of(context)
                                                                  .titleMedium
                                                                  .override(
                                                                    fontFamily:
                                                                        'Outfit',
                                                                    color: FlutterFlowTheme.of(
                                                                            context)
                                                                        .secondaryText,
                                                                    fontSize:
                                                                        20,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w500,
                                                                  ),
                                                            ),
                                                            FlutterFlowIconButton(
                                                              borderColor: Colors
                                                                  .transparent,
                                                              borderRadius: 30,
                                                              borderWidth: 1,
                                                              buttonSize: 36,
                                                              icon: Icon(
                                                                Icons
                                                                    .info_outlined,
                                                                color: FlutterFlowTheme.of(
                                                                        context)
                                                                    .secondaryText,
                                                                size: 18,
                                                              ),
                                                              onPressed: () {
                                                                print(
                                                                    'IconButton pressed ...');
                                                              },
                                                            ),
                                                          ],
                                                        ),
                                                        Text(
                                                          formatNumber(
                                                            functions.orderTotal(
                                                                FFAppState()
                                                                    .breakfastCartList
                                                                    .map((e) => e
                                                                        .itemTotal)
                                                                    .toList(),
                                                                FFAppState()
                                                                    .dinnerCartList
                                                                    .map((e) => e
                                                                        .itemTotal)
                                                                    .toList(),
                                                                FFAppState()
                                                                    .lunchCartList
                                                                    .map((e) => e
                                                                        .itemTotal)
                                                                    .toList(),
                                                                FFAppState()
                                                                    .snackCartList
                                                                    .map((e) =>
                                                                        e.itemTotal)
                                                                    .toList()),
                                                            formatType:
                                                                FormatType
                                                                    .custom,
                                                            currency: '₹',
                                                            format: '',
                                                            locale: '',
                                                          ),
                                                          style: FlutterFlowTheme
                                                                  .of(context)
                                                              .displaySmall
                                                              .override(
                                                                fontFamily:
                                                                    'Outfit',
                                                                fontSize: 24,
                                                              ),
                                                        ),
                                                      ],
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ),
                                          ],
                                        ),
                                      ),
                                  ],
                                ),
                              ),
                            ),
                          ),
                        ),
                        Padding(
                          padding: EdgeInsetsDirectional.fromSTEB(16, 0, 16, 0),
                          child: FFButtonWidget(
                            onPressed: () async {
                              logFirebaseEvent(
                                  'CART_CONTINUE_TO_CHECKOUT_BTN_ON_TAP');
                              var _shouldSetState = false;
                              if (valueOrDefault(
                                      currentUserDocument?.walletBalance, 0.0) <
                                  functions.orderTotal(
                                      FFAppState()
                                          .breakfastCartList
                                          .map((e) => e.itemTotal)
                                          .toList(),
                                      FFAppState()
                                          .dinnerCartList
                                          .map((e) => e.itemTotal)
                                          .toList(),
                                      FFAppState()
                                          .lunchCartList
                                          .map((e) => e.itemTotal)
                                          .toList(),
                                      FFAppState()
                                          .snackCartList
                                          .map((e) => e.itemTotal)
                                          .toList())) {
                                HapticFeedback.lightImpact();
                                ScaffoldMessenger.of(context).clearSnackBars();
                                ScaffoldMessenger.of(context).showSnackBar(
                                  SnackBar(
                                    content: Text(
                                      'Low Wallet Balance',
                                      style: FlutterFlowTheme.of(context)
                                          .headlineSmall
                                          .override(
                                            fontFamily: 'Outfit',
                                            color: FlutterFlowTheme.of(context)
                                                .alternate,
                                            fontSize: 18,
                                          ),
                                    ),
                                    duration: Duration(milliseconds: 4000),
                                    backgroundColor:
                                        FlutterFlowTheme.of(context).error,
                                    action: SnackBarAction(
                                      label: 'Recharge Now!',
                                      textColor: FlutterFlowTheme.of(context)
                                          .alternate,
                                      onPressed: () async {
                                        context.pushNamed('wallet');
                                      },
                                    ),
                                  ),
                                );
                              } else {
                                setState(() {
                                  FFAppState().orderTotal =
                                      functions.orderTotal(
                                          FFAppState()
                                              .breakfastCartList
                                              .map((e) => e.itemTotal)
                                              .toList(),
                                          FFAppState()
                                              .dinnerCartList
                                              .map((e) => e.itemTotal)
                                              .toList(),
                                          FFAppState()
                                              .lunchCartList
                                              .map((e) => e.itemTotal)
                                              .toList(),
                                          FFAppState()
                                              .snackCartList
                                              .map((e) => e.itemTotal)
                                              .toList());
                                });

                                var walletTransactionsRecordReference =
                                    WalletTransactionsRecord.createDoc(
                                        currentUserReference!);
                                await walletTransactionsRecordReference
                                    .set(createWalletTransactionsRecordData(
                                  amount: FFAppState().orderTotal,
                                  transactionName: 'Order',
                                  transactionDate: getCurrentTimestamp,
                                  transactionType: 'Debit',
                                  closingBalance: valueOrDefault(
                                          currentUserDocument?.walletBalance,
                                          0.0) -
                                      FFAppState().orderTotal,
                                ));
                                _model.walletTransaction =
                                    WalletTransactionsRecord
                                        .getDocumentFromData(
                                            createWalletTransactionsRecordData(
                                              amount: FFAppState().orderTotal,
                                              transactionName: 'Order',
                                              transactionDate:
                                                  getCurrentTimestamp,
                                              transactionType: 'Debit',
                                              closingBalance: valueOrDefault(
                                                      currentUserDocument
                                                          ?.walletBalance,
                                                      0.0) -
                                                  FFAppState().orderTotal,
                                            ),
                                            walletTransactionsRecordReference);
                                _shouldSetState = true;
                                if (_model.walletTransaction?.status == null ||
                                    _model.walletTransaction?.status == '') {
                                  await _model.walletTransaction!.reference
                                      .update(
                                          createWalletTransactionsRecordData(
                                    status: 'Success',
                                  ));

                                  await currentUserReference!
                                      .update(createUsersRecordData(
                                    walletBalance: valueOrDefault(
                                            currentUserDocument?.walletBalance,
                                            0.0) -
                                        FFAppState().orderTotal,
                                  ));
                                  _model.currProfile =
                                      await queryProfilesRecordOnce(
                                    parent: currentUserReference,
                                    queryBuilder: (profilesRecord) =>
                                        profilesRecord.where(
                                      'pid',
                                      isEqualTo: FFAppState().selectedProfileID,
                                    ),
                                    singleRecord: true,
                                  ).then((s) => s.firstOrNull);
                                  _shouldSetState = true;
                                  while (_model.cartIndex <
                                      FFAppState().breakfastCartList.length) {
                                    _model.currBFItem = await BreakfastRecord
                                        .getDocumentOnce(FFAppState()
                                            .breakfastCartList[_model.cartIndex]
                                            .bfRef!);
                                    _shouldSetState = true;
                                    if (_model.currProfile?.profileType ==
                                        'Child') {
                                      _model.schoolDeliveryLocation =
                                          await SchoolsRecord.getDocumentOnce(
                                              _model.currProfile!.schoolRef!);
                                      _shouldSetState = true;
                                    } else {
                                      _model.deliveryLocation =
                                          await OfficesRecord.getDocumentOnce(
                                              _model.currProfile!.office!);
                                      _shouldSetState = true;
                                    }

                                    var ordersRecordReference1 =
                                        OrdersRecord.collection.doc();
                                    await ordersRecordReference1
                                        .set(createOrdersRecordData(
                                      orderDate: getCurrentTimestamp,
                                      status: 'Pending',
                                      pid: FFAppState().selectedProfileID,
                                      userID: currentUserReference?.id,
                                      profileType:
                                          _model.currProfile?.profileType,
                                      orderTotal: FFAppState()
                                          .breakfastCartList[_model.cartIndex]
                                          .itemTotal,
                                      orderType: FFAppState()
                                          .breakfastCartList[_model.cartIndex]
                                          .itemType,
                                      location: _model
                                                  .currProfile?.profileType ==
                                              'Adult'
                                          ? _model.currProfile?.office?.id
                                          : _model.currProfile?.schoolRef?.id,
                                      deliveryDate: FFAppState()
                                          .breakfastCartList[_model.cartIndex]
                                          .deliveryDate,
                                      orderName: _model
                                          .currBFItem?.breakfastItem?.name,
                                      orderImage: _model
                                          .currBFItem?.breakfastItem?.photoUrl,
                                      itemID: _model.currBFItem?.reference.id,
                                      expectedDeliveryDate:
                                          functions.getExpectedDeliveryDate(
                                              FFAppState()
                                                  .breakfastCartList[
                                                      _model.cartIndex]
                                                  .deliveryDate!,
                                              _model.currProfile?.profileType ==
                                                      'Child'
                                                  ? _model
                                                      .schoolDeliveryLocation
                                                      ?.breakfastTiming
                                                  : _model.deliveryLocation
                                                      ?.breakfastTiming),
                                      quantity: FFAppState()
                                          .breakfastCartList[_model.cartIndex]
                                          .quantity,
                                      locationType:
                                          _model.currProfile?.profileType ==
                                                  'Child'
                                              ? 'School'
                                              : 'Office',
                                      locationName: _model
                                                  .currProfile?.profileType ==
                                              'Child'
                                          ? _model.schoolDeliveryLocation?.name
                                          : _model.deliveryLocation?.name,
                                    ));
                                    _model.newOrder =
                                        OrdersRecord.getDocumentFromData(
                                            createOrdersRecordData(
                                              orderDate: getCurrentTimestamp,
                                              status: 'Pending',
                                              pid: FFAppState()
                                                  .selectedProfileID,
                                              userID: currentUserReference?.id,
                                              profileType: _model
                                                  .currProfile?.profileType,
                                              orderTotal: FFAppState()
                                                  .breakfastCartList[
                                                      _model.cartIndex]
                                                  .itemTotal,
                                              orderType: FFAppState()
                                                  .breakfastCartList[
                                                      _model.cartIndex]
                                                  .itemType,
                                              location: _model.currProfile
                                                          ?.profileType ==
                                                      'Adult'
                                                  ? _model
                                                      .currProfile?.office?.id
                                                  : _model.currProfile
                                                      ?.schoolRef?.id,
                                              deliveryDate: FFAppState()
                                                  .breakfastCartList[
                                                      _model.cartIndex]
                                                  .deliveryDate,
                                              orderName: _model.currBFItem
                                                  ?.breakfastItem?.name,
                                              orderImage: _model.currBFItem
                                                  ?.breakfastItem?.photoUrl,
                                              itemID: _model
                                                  .currBFItem?.reference.id,
                                              expectedDeliveryDate: functions
                                                  .getExpectedDeliveryDate(
                                                      FFAppState()
                                                          .breakfastCartList[
                                                              _model.cartIndex]
                                                          .deliveryDate!,
                                                      _model.currProfile
                                                                  ?.profileType ==
                                                              'Child'
                                                          ? _model
                                                              .schoolDeliveryLocation
                                                              ?.breakfastTiming
                                                          : _model
                                                              .deliveryLocation
                                                              ?.breakfastTiming),
                                              quantity: FFAppState()
                                                  .breakfastCartList[
                                                      _model.cartIndex]
                                                  .quantity,
                                              locationType: _model.currProfile
                                                          ?.profileType ==
                                                      'Child'
                                                  ? 'School'
                                                  : 'Office',
                                              locationName: _model.currProfile
                                                          ?.profileType ==
                                                      'Child'
                                                  ? _model
                                                      .schoolDeliveryLocation
                                                      ?.name
                                                  : _model
                                                      .deliveryLocation?.name,
                                            ),
                                            ordersRecordReference1);
                                    _shouldSetState = true;
                                    setState(() {
                                      _model.cartIndex = _model.cartIndex + 1;
                                    });
                                  }
                                  setState(() {
                                    _model.cartIndex = 0;
                                  });
                                  while (_model.cartIndex <
                                      FFAppState().lunchCartList.length) {
                                    _model.currLunchItem =
                                        await LunchRecord.getDocumentOnce(
                                            FFAppState()
                                                .lunchCartList[_model.cartIndex]
                                                .lunchRef!);
                                    _shouldSetState = true;
                                    if (_model.currProfile?.profileType ==
                                        'Child') {
                                      _model.schoolDeliveryLocation1 =
                                          await SchoolsRecord.getDocumentOnce(
                                              _model.currProfile!.schoolRef!);
                                      _shouldSetState = true;
                                    } else {
                                      _model.deliveryLocation1 =
                                          await OfficesRecord.getDocumentOnce(
                                              _model.currProfile!.office!);
                                      _shouldSetState = true;
                                    }

                                    var ordersRecordReference2 =
                                        OrdersRecord.collection.doc();
                                    await ordersRecordReference2
                                        .set(createOrdersRecordData(
                                      orderDate: getCurrentTimestamp,
                                      status: 'Pending',
                                      pid: FFAppState().selectedProfileID,
                                      userID: currentUserReference?.id,
                                      profileType:
                                          _model.currProfile?.profileType,
                                      orderTotal: FFAppState()
                                          .lunchCartList[_model.cartIndex]
                                          .itemTotal,
                                      orderType: FFAppState()
                                          .lunchCartList[_model.cartIndex]
                                          .itemType,
                                      location: _model
                                                  .currProfile?.profileType ==
                                              'Adult'
                                          ? _model.currProfile?.office?.id
                                          : _model.currProfile?.schoolRef?.id,
                                      deliveryDate: FFAppState()
                                          .lunchCartList[_model.cartIndex]
                                          .deliveryDate,
                                      orderName:
                                          _model.currLunchItem?.lunchItem?.name,
                                      orderImage: _model
                                          .currLunchItem?.lunchItem?.photoUrl,
                                      itemID:
                                          _model.currLunchItem?.reference.id,
                                      expectedDeliveryDate:
                                          functions.getExpectedDeliveryDate(
                                              FFAppState()
                                                  .lunchCartList[
                                                      _model.cartIndex]
                                                  .deliveryDate!,
                                              _model.currProfile?.profileType ==
                                                      'Child'
                                                  ? _model
                                                      .schoolDeliveryLocation
                                                      ?.lunchTiming
                                                  : _model.deliveryLocation
                                                      ?.lunchTiming),
                                      quantity: FFAppState()
                                          .lunchCartList[_model.cartIndex]
                                          .quantity,
                                      locationType:
                                          _model.currProfile?.profileType ==
                                                  'Child'
                                              ? 'School'
                                              : 'Office',
                                      locationName: _model
                                                  .currProfile?.profileType ==
                                              'Child'
                                          ? _model.schoolDeliveryLocation1?.name
                                          : _model.deliveryLocation1?.name,
                                    ));
                                    _model.newLunchOrder =
                                        OrdersRecord.getDocumentFromData(
                                            createOrdersRecordData(
                                              orderDate: getCurrentTimestamp,
                                              status: 'Pending',
                                              pid: FFAppState()
                                                  .selectedProfileID,
                                              userID: currentUserReference?.id,
                                              profileType: _model
                                                  .currProfile?.profileType,
                                              orderTotal: FFAppState()
                                                  .lunchCartList[
                                                      _model.cartIndex]
                                                  .itemTotal,
                                              orderType: FFAppState()
                                                  .lunchCartList[
                                                      _model.cartIndex]
                                                  .itemType,
                                              location: _model.currProfile
                                                          ?.profileType ==
                                                      'Adult'
                                                  ? _model
                                                      .currProfile?.office?.id
                                                  : _model.currProfile
                                                      ?.schoolRef?.id,
                                              deliveryDate: FFAppState()
                                                  .lunchCartList[
                                                      _model.cartIndex]
                                                  .deliveryDate,
                                              orderName: _model.currLunchItem
                                                  ?.lunchItem?.name,
                                              orderImage: _model.currLunchItem
                                                  ?.lunchItem?.photoUrl,
                                              itemID: _model
                                                  .currLunchItem?.reference.id,
                                              expectedDeliveryDate: functions
                                                  .getExpectedDeliveryDate(
                                                      FFAppState()
                                                          .lunchCartList[
                                                              _model.cartIndex]
                                                          .deliveryDate!,
                                                      _model.currProfile
                                                                  ?.profileType ==
                                                              'Child'
                                                          ? _model
                                                              .schoolDeliveryLocation
                                                              ?.lunchTiming
                                                          : _model
                                                              .deliveryLocation
                                                              ?.lunchTiming),
                                              quantity: FFAppState()
                                                  .lunchCartList[
                                                      _model.cartIndex]
                                                  .quantity,
                                              locationType: _model.currProfile
                                                          ?.profileType ==
                                                      'Child'
                                                  ? 'School'
                                                  : 'Office',
                                              locationName: _model.currProfile
                                                          ?.profileType ==
                                                      'Child'
                                                  ? _model
                                                      .schoolDeliveryLocation1
                                                      ?.name
                                                  : _model
                                                      .deliveryLocation1?.name,
                                            ),
                                            ordersRecordReference2);
                                    _shouldSetState = true;
                                    setState(() {
                                      _model.cartIndex = _model.cartIndex + 1;
                                    });
                                  }
                                  setState(() {
                                    _model.cartIndex = 0;
                                  });
                                  while (_model.cartIndex <
                                      FFAppState().dinnerCartList.length) {
                                    _model.currDinnerItem = await LunchRecord
                                        .getDocumentOnce(FFAppState()
                                            .dinnerCartList[_model.cartIndex]
                                            .dinnerRef!);
                                    _shouldSetState = true;
                                    if (_model.currProfile?.profileType ==
                                        'Child') {
                                      _model.schoolDeliveryLocation2 =
                                          await SchoolsRecord.getDocumentOnce(
                                              _model.currProfile!.schoolRef!);
                                      _shouldSetState = true;
                                    } else {
                                      _model.deliveryLocation2 =
                                          await OfficesRecord.getDocumentOnce(
                                              _model.currProfile!.office!);
                                      _shouldSetState = true;
                                    }

                                    var ordersRecordReference3 =
                                        OrdersRecord.collection.doc();
                                    await ordersRecordReference3
                                        .set(createOrdersRecordData(
                                      orderDate: getCurrentTimestamp,
                                      status: 'Pending',
                                      pid: FFAppState().selectedProfileID,
                                      userID: currentUserReference?.id,
                                      profileType:
                                          _model.currProfile?.profileType,
                                      orderTotal: FFAppState()
                                          .dinnerCartList[_model.cartIndex]
                                          .itemTotal,
                                      orderType: FFAppState()
                                          .dinnerCartList[_model.cartIndex]
                                          .itemType,
                                      location: _model
                                                  .currProfile?.profileType ==
                                              'Adult'
                                          ? _model.currProfile?.office?.id
                                          : _model.currProfile?.schoolRef?.id,
                                      deliveryDate: FFAppState()
                                          .dinnerCartList[_model.cartIndex]
                                          .deliveryDate,
                                      orderName: _model
                                          .currDinnerItem?.lunchItem?.name,
                                      orderImage: _model
                                          .currDinnerItem?.lunchItem?.photoUrl,
                                      itemID:
                                          _model.currDinnerItem?.reference.id,
                                      expectedDeliveryDate:
                                          functions.getExpectedDeliveryDate(
                                              FFAppState()
                                                  .dinnerCartList[
                                                      _model.cartIndex]
                                                  .deliveryDate!,
                                              _model.deliveryLocation2
                                                  ?.dinnerTiming),
                                      quantity: FFAppState()
                                          .dinnerCartList[_model.cartIndex]
                                          .quantity,
                                      locationType:
                                          _model.currProfile?.profileType ==
                                                  'Child'
                                              ? 'School'
                                              : 'Office',
                                      locationName: _model
                                                  .currProfile?.profileType ==
                                              'Child'
                                          ? _model.schoolDeliveryLocation2?.name
                                          : _model.deliveryLocation2?.name,
                                    ));
                                    _model.newDinnerOrder =
                                        OrdersRecord.getDocumentFromData(
                                            createOrdersRecordData(
                                              orderDate: getCurrentTimestamp,
                                              status: 'Pending',
                                              pid: FFAppState()
                                                  .selectedProfileID,
                                              userID: currentUserReference?.id,
                                              profileType: _model
                                                  .currProfile?.profileType,
                                              orderTotal: FFAppState()
                                                  .dinnerCartList[
                                                      _model.cartIndex]
                                                  .itemTotal,
                                              orderType: FFAppState()
                                                  .dinnerCartList[
                                                      _model.cartIndex]
                                                  .itemType,
                                              location: _model.currProfile
                                                          ?.profileType ==
                                                      'Adult'
                                                  ? _model
                                                      .currProfile?.office?.id
                                                  : _model.currProfile
                                                      ?.schoolRef?.id,
                                              deliveryDate: FFAppState()
                                                  .dinnerCartList[
                                                      _model.cartIndex]
                                                  .deliveryDate,
                                              orderName: _model.currDinnerItem
                                                  ?.lunchItem?.name,
                                              orderImage: _model.currDinnerItem
                                                  ?.lunchItem?.photoUrl,
                                              itemID: _model
                                                  .currDinnerItem?.reference.id,
                                              expectedDeliveryDate: functions
                                                  .getExpectedDeliveryDate(
                                                      FFAppState()
                                                          .dinnerCartList[
                                                              _model.cartIndex]
                                                          .deliveryDate!,
                                                      _model.deliveryLocation2
                                                          ?.dinnerTiming),
                                              quantity: FFAppState()
                                                  .dinnerCartList[
                                                      _model.cartIndex]
                                                  .quantity,
                                              locationType: _model.currProfile
                                                          ?.profileType ==
                                                      'Child'
                                                  ? 'School'
                                                  : 'Office',
                                              locationName: _model.currProfile
                                                          ?.profileType ==
                                                      'Child'
                                                  ? _model
                                                      .schoolDeliveryLocation2
                                                      ?.name
                                                  : _model
                                                      .deliveryLocation2?.name,
                                            ),
                                            ordersRecordReference3);
                                    _shouldSetState = true;
                                    setState(() {
                                      _model.cartIndex = _model.cartIndex + 1;
                                    });
                                  }
                                  setState(() {
                                    _model.cartIndex = 0;
                                  });
                                  while (_model.cartIndex <
                                      FFAppState().snackCartList.length) {
                                    _model.currSnackItem =
                                        await SnacksRecord.getDocumentOnce(
                                            FFAppState()
                                                .snackCartList[_model.cartIndex]
                                                .snackRef!);
                                    _shouldSetState = true;
                                    if (_model.currProfile?.profileType ==
                                        'Child') {
                                      _model.schoolDeliveryLocation3 =
                                          await SchoolsRecord.getDocumentOnce(
                                              _model.currProfile!.schoolRef!);
                                      _shouldSetState = true;
                                    } else {
                                      _model.deliveryLocation3 =
                                          await OfficesRecord.getDocumentOnce(
                                              _model.currProfile!.office!);
                                      _shouldSetState = true;
                                    }

                                    var ordersRecordReference4 =
                                        OrdersRecord.collection.doc();
                                    await ordersRecordReference4
                                        .set(createOrdersRecordData(
                                      orderDate: getCurrentTimestamp,
                                      status: 'Pending',
                                      pid: FFAppState().selectedProfileID,
                                      userID: currentUserReference?.id,
                                      profileType:
                                          _model.currProfile?.profileType,
                                      orderTotal: FFAppState()
                                          .snackCartList[_model.cartIndex]
                                          .itemTotal,
                                      orderType: FFAppState()
                                          .snackCartList[_model.cartIndex]
                                          .snackFor,
                                      location: _model
                                                  .currProfile?.profileType ==
                                              'Adult'
                                          ? _model.currProfile?.office?.id
                                          : _model.currProfile?.schoolRef?.id,
                                      deliveryDate: FFAppState()
                                          .snackCartList[_model.cartIndex]
                                          .deliveryDate,
                                      orderName: _model
                                          .currSnackItem?.snacksItem?.name,
                                      orderImage: _model
                                          .currSnackItem?.snacksItem?.photoUrl,
                                      itemID:
                                          _model.currSnackItem?.reference.id,
                                      expectedDeliveryDate:
                                          functions.getExpectedDeliveryDate(
                                              FFAppState()
                                                  .snackCartList[
                                                      _model.cartIndex]
                                                  .deliveryDate!,
                                              _model.currProfile?.profileType ==
                                                      'Child'
                                                  ? (FFAppState()
                                                              .snackCartList[
                                                                  _model
                                                                      .cartIndex]
                                                              .snackFor ==
                                                          'Breakfast'
                                                      ? _model
                                                          .schoolDeliveryLocation3
                                                          ?.breakfastTiming
                                                      : _model
                                                          .schoolDeliveryLocation3
                                                          ?.lunchTiming)
                                                  : () {
                                                      if (FFAppState()
                                                              .snackCartList[
                                                                  _model
                                                                      .cartIndex]
                                                              .snackFor ==
                                                          'Breakfast') {
                                                        return _model
                                                            .deliveryLocation3
                                                            ?.breakfastTiming;
                                                      } else if (FFAppState()
                                                              .snackCartList[
                                                                  _model
                                                                      .cartIndex]
                                                              .snackFor ==
                                                          'Lunch') {
                                                        return _model
                                                            .deliveryLocation3
                                                            ?.lunchTiming;
                                                      } else {
                                                        return _model
                                                            .deliveryLocation3
                                                            ?.dinnerTiming;
                                                      }
                                                    }()),
                                      quantity: FFAppState()
                                          .snackCartList[_model.cartIndex]
                                          .quantity,
                                      locationType:
                                          _model.currProfile?.profileType ==
                                                  'Child'
                                              ? 'School'
                                              : 'Office',
                                      locationName: _model
                                                  .currProfile?.profileType ==
                                              'Child'
                                          ? _model.schoolDeliveryLocation2?.name
                                          : _model.deliveryLocation2?.name,
                                    ));
                                    _model.newSnackOrder =
                                        OrdersRecord.getDocumentFromData(
                                            createOrdersRecordData(
                                              orderDate: getCurrentTimestamp,
                                              status: 'Pending',
                                              pid: FFAppState()
                                                  .selectedProfileID,
                                              userID: currentUserReference?.id,
                                              profileType: _model
                                                  .currProfile?.profileType,
                                              orderTotal: FFAppState()
                                                  .snackCartList[
                                                      _model.cartIndex]
                                                  .itemTotal,
                                              orderType: FFAppState()
                                                  .snackCartList[
                                                      _model.cartIndex]
                                                  .snackFor,
                                              location: _model.currProfile
                                                          ?.profileType ==
                                                      'Adult'
                                                  ? _model
                                                      .currProfile?.office?.id
                                                  : _model.currProfile
                                                      ?.schoolRef?.id,
                                              deliveryDate: FFAppState()
                                                  .snackCartList[
                                                      _model.cartIndex]
                                                  .deliveryDate,
                                              orderName: _model.currSnackItem
                                                  ?.snacksItem?.name,
                                              orderImage: _model.currSnackItem
                                                  ?.snacksItem?.photoUrl,
                                              itemID: _model
                                                  .currSnackItem?.reference.id,
                                              expectedDeliveryDate: functions
                                                  .getExpectedDeliveryDate(
                                                      FFAppState()
                                                          .snackCartList[
                                                              _model.cartIndex]
                                                          .deliveryDate!,
                                                      _model.currProfile
                                                                  ?.profileType ==
                                                              'Child'
                                                          ? (FFAppState()
                                                                      .snackCartList[
                                                                          _model
                                                                              .cartIndex]
                                                                      .snackFor ==
                                                                  'Breakfast'
                                                              ? _model
                                                                  .schoolDeliveryLocation3
                                                                  ?.breakfastTiming
                                                              : _model
                                                                  .schoolDeliveryLocation3
                                                                  ?.lunchTiming)
                                                          : () {
                                                              if (FFAppState()
                                                                      .snackCartList[
                                                                          _model
                                                                              .cartIndex]
                                                                      .snackFor ==
                                                                  'Breakfast') {
                                                                return _model
                                                                    .deliveryLocation3
                                                                    ?.breakfastTiming;
                                                              } else if (FFAppState()
                                                                      .snackCartList[
                                                                          _model
                                                                              .cartIndex]
                                                                      .snackFor ==
                                                                  'Lunch') {
                                                                return _model
                                                                    .deliveryLocation3
                                                                    ?.lunchTiming;
                                                              } else {
                                                                return _model
                                                                    .deliveryLocation3
                                                                    ?.dinnerTiming;
                                                              }
                                                            }()),
                                              quantity: FFAppState()
                                                  .snackCartList[
                                                      _model.cartIndex]
                                                  .quantity,
                                              locationType: _model.currProfile
                                                          ?.profileType ==
                                                      'Child'
                                                  ? 'School'
                                                  : 'Office',
                                              locationName: _model.currProfile
                                                          ?.profileType ==
                                                      'Child'
                                                  ? _model
                                                      .schoolDeliveryLocation2
                                                      ?.name
                                                  : _model
                                                      .deliveryLocation2?.name,
                                            ),
                                            ordersRecordReference4);
                                    _shouldSetState = true;
                                    setState(() {
                                      _model.cartIndex = _model.cartIndex + 1;
                                    });
                                  }
                                  setState(() {
                                    _model.cartIndex = 0;
                                  });
                                  setState(() {
                                    FFAppState().deleteBreakfastCartList();
                                    FFAppState().breakfastCartList = [];

                                    FFAppState().deleteLunchCartList();
                                    FFAppState().lunchCartList = [];

                                    FFAppState().deleteDinnerCartList();
                                    FFAppState().dinnerCartList = [];

                                    FFAppState().deleteSnackCartList();
                                    FFAppState().snackCartList = [];
                                  });

                                  context.goNamed(
                                    'orderConfirmation',
                                    extra: <String, dynamic>{
                                      kTransitionInfoKey: TransitionInfo(
                                        hasTransition: true,
                                        transitionType:
                                            PageTransitionType.bottomToTop,
                                      ),
                                    },
                                  );

                                  unawaited(
                                    () async {}(),
                                  );
                                } else {
                                  await _model.walletTransaction!.reference
                                      .update(
                                          createWalletTransactionsRecordData(
                                    status: 'Failed',
                                  ));
                                  if (_shouldSetState) setState(() {});
                                  return;
                                }
                              }

                              if (_shouldSetState) setState(() {});
                            },
                            text: 'Continue to Checkout',
                            options: FFButtonOptions(
                              width: double.infinity,
                              height: 50,
                              padding:
                                  EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                              iconPadding:
                                  EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),
                              color: FlutterFlowTheme.of(context).tertiary,
                              textStyle:
                                  FlutterFlowTheme.of(context).titleSmall,
                              elevation: 2,
                              borderSide: BorderSide(
                                color: Colors.transparent,
                                width: 1,
                              ),
                              borderRadius: BorderRadius.circular(50),
                              hoverColor: FlutterFlowTheme.of(context).tertiary,
                              hoverBorderSide: BorderSide(
                                color: FlutterFlowTheme.of(context).alternate,
                                width: 1,
                              ),
                              hoverTextColor:
                                  FlutterFlowTheme.of(context).primaryText,
                            ),
                          ),
                        ),
                        Padding(
                          padding: EdgeInsetsDirectional.fromSTEB(0, 5, 0, 0),
                          child: Container(
                            width: 100,
                            height: 50,
                            decoration: BoxDecoration(
                              color: FlutterFlowTheme.of(context)
                                  .secondaryBackground,
                            ),
                          ),
                        ),
                      ],
                    ),
                  ),
                ),
              ],
            );
          },
        ),
      ),
    );
  }
}
